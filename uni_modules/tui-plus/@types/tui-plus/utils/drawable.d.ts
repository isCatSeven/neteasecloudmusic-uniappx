export declare class TuiDrawableContext {
    private ctx;
    private el;
    private dpr;
    private fontSize;
    private component;
    private canvas;
    constructor(draw: ComponentPublicInstance | null);
    get font(): string;
    set font(size: string);
    get fillStyle(): string;
    set fillStyle(color: string);
    measureText(e: string): number;
    get lineCap(): string;
    set lineCap(cap: string);
    get lineDashOffset(): number;
    set lineDashOffset(tran: number);
    get lineJoin(): string;
    set lineJoin(join: string);
    get lineWidth(): number;
    set lineWidth(width: number);
    get strokeStyle(): string;
    set strokeStyle(color: string);
    get textAlign(): string;
    set textAlign(align: string);
    beginPath(): void;
    arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise: boolean): void;
    moveTo(x: number, y: number): void;
    rect(x: number, y: number, width: number, height: number): void;
    roundRect(x: number, y: number, width: number, height: number, radius: number): void;
    roundFillRect(x: number, y: number, width: number, height: number, radius: number): void;
    lineTo(x: number, y: number): void;
    closePath(): void;
    stroke(): void;
    strokeRect(x: number, y: number, width: number, height: number): void;
    strokeText(text: string, x: number, y: number): void;
    fill(fillRule?: string): void;
    fillRect(x: number, y: number, width: number, height: number): void;
    fillText(text: string, x: number, y: number): void;
    reset(): void;
    update(): void;
    setLineDash(segments: number[]): void;
    bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void;
    takeSnapshot(): Promise<TakeSnapshotSuccess>;
    drawImage(url: string, dx: number, dy: number, dWidth: number, dHeight: number): void;
    createLinearGradient(x0: number, y0: number, x1: number, y1: number): void;
    get width(): number;
    set width(w: number);
    get height(): number;
    set height(h: number);
}
