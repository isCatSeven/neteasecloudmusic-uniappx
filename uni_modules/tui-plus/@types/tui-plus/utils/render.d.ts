export declare function TuiRenderList(list: any[], fun: (value: any | null, key: number) => VNode): VNode[];
export declare function TuiRenderSlot(that: ComponentPublicInstance, slotName?: string, slotData?: Map<string, any> | null): VNode | null;
export declare function n(that: ComponentPublicInstance, slotName?: string): any[];
export declare function v(vb: boolean, vt?: VNode | null, vf?: VNode | null): VNode | null;
export declare function d(styb: boolean, styt?: string, styf?: string): string;
export declare function f(list: any[], fun: (value: any | null, key: number) => VNode): VNode[];
export declare function r(that: ComponentPublicInstance, slotName?: string, slotData?: Map<string, any> | null): VNode | null;
export declare function TuiMap(): Map<string, any>;
export declare function TuiSlot(): Map<string, any>;
export declare function TuiWithCtx(nodes: any, slotName?: string): any;
export declare function TuiSetHover(sty: Map<string, any>, className?: string): void;
export declare function TuiSetProperty(el: any | null, styles: string): void;
export declare function TuiGetSlotText(nodes: any[]): string;
export declare function TuiGetVNodeTag(e: any): string;
export declare function sa(that: ComponentPublicInstance, attrs: Map<string, any>, keys?: string[]): void;
export declare function ga(that: ComponentPublicInstance, key: string): any;
export declare function TuiGetSlotNodes(slotName?: string): any[];
export declare function TuiGetVNodePropsValue(e: any, key: string): any | null;
export declare function TuiGetVNodeProps(e: any): Map<string, any>;
export declare function TuiSetVNodeProps(props: any, key: string, value: any, cover?: boolean): void;
export declare function TuiGetProps(e: ComponentPublicInstance): Map<string, any>;
export declare function TuiContextualRenderFnToVNode(e: VNode, slotData?: UTSJSONObject | null, slotName?: string): VNode[];
export declare function TuiCloneVNodes(nodes: any[], fun?: ((tag: string, vn: VNode) => VNode) | null): any[];
export declare function TuiResolveCache(render: () => VNode, e: ComponentPublicInstance): VNode;
